#PASS: responder correctly authenticated.
G((Astate<*0*>=COMMITTED * Apartner<*0*>[2:0]=2) ->
  (Bpartner<*2*>[2:0]=0 * Bstate<*2*>={WAITING,COMMITTED}));
G((Astate<*0*>=COMMITTED * Apartner<*0*>[2:0]=3) ->
  (Bpartner<*3*>[2:0]=0 * Bstate<*3*>={WAITING,COMMITTED}));
G((Astate<*1*>=COMMITTED * Apartner<*1*>[2:0]=2) ->
  (Bpartner<*2*>[2:0]=1 * Bstate<*2*>={WAITING,COMMITTED}));
G((Astate<*1*>=COMMITTED * Apartner<*1*>[2:0]=3) ->
  (Bpartner<*3*>[2:0]=1 * Bstate<*3*>={WAITING,COMMITTED}));

#PASS: initiator correctly authenticated.
G((Bstate<*2*>=COMMITTED * Bpartner<*2*>[2:0]=0) ->
  (Apartner<*0*>[2:0]=2 * Astate<*0*>=COMMITTED));
G((Bstate<*2*>=COMMITTED * Bpartner<*2*>[2:0]=1) ->
  (Apartner<*1*>[2:0]=2 * Astate<*1*>=COMMITTED));
G((Bstate<*3*>=COMMITTED * Bpartner<*3*>[2:0]=0) ->
  (Apartner<*0*>[2:0]=3 * Astate<*0*>=COMMITTED));
G((Bstate<*3*>=COMMITTED * Bpartner<*3*>[2:0]=1) ->
  (Apartner<*1*>[2:0]=3 * Astate<*1*>=COMMITTED));

#PASS: if intruder knows responder's nonce it's because it has explicitly
# initiated conversation with it.
G(Cnonces<*2*>=0 + Bpartner<*2*>[2:0]=4);
G(Cnonces<*3*>=0 + Bpartner<*3*>[2:0]=4);

#PASS: Only intruders may use the wrong key.
G(key[2:0]==dest[2:0] + source[2:0]=4);

#PASS: Intruder always knows its nonce.
G(Cnonces<*4*>=1);

#PASS: Intruder does not forget nonces.
G(Cnonces<*0*>=1 -> G Cnonces<*0*>=1);
G(Cnonces<*1*>=1 -> G Cnonces<*1*>=1);
G(Cnonces<*2*>=1 -> G Cnonces<*2*>=1);
G(Cnonces<*3*>=1 -> G Cnonces<*3*>=1);

#PASS: Commitment is serious.
G(Astate<*0*>=COMMITTED -> G Astate<*0*>=COMMITTED);
G(Astate<*1*>=COMMITTED -> G Astate<*1*>=COMMITTED);
G(Bstate<*2*>=COMMITTED -> G Bstate<*2*>=COMMITTED);
G(Bstate<*3*>=COMMITTED -> G Bstate<*3*>=COMMITTED);
