#
# Author: Abelardo Pardo <abel@vlsi.colorado.edu>
#
# Limitation of Mobility for the Travelling Crane
#
!((TC.Crane.HorizontalPos = OverFB) * 
  (TC.CraneCNTR.HorizontalMove = GoLeft));                            # 1
!((TC.Crane.HorizontalPos = OverDB) * 
  (TC.CraneCNTR.HorizontalMove = GoRight));                           # 2
!((TC.Crane.HorizontalPos = Middle) * 
 (!(TC.Crane.VerticalPos = UpMost)));                                 # 3
!((TC.Crane.HorizontalPos = OverDB) * 
  (TC.Crane.VerticalPos = FBHight));                                  # 4
!(TC.Crane.VerticalPos = UpMost * 
  TC.CraneCNTR.VerticalMove = GoUp);                                  # 5
!(TC.Crane.VerticalPos = FBHight * 
  TC.CraneCNTR.VerticalMove = GoDown);                                # 6
!TC.Crane.HorizontalMove = Stop -> 
 TC.CraneCNTR.VerticalPos = UpMost;                                   # 7
#
# Limitation of Mobility of the Rotary Table
#
!(RT.RTable.RTAngle = S * 
  RT.RTableCNTR.RTRotaryMotor = CWise);                               # 8
!(RT.RTable.RTAngle = SE * 
  RT.RTableCNTR.RTRotaryMotor = CCWise);                              # 9
!(RT.RTable.RTHight = Top * 
  RT.RTableCNTR.RTVerticalMotor = GoUp);                              # 10
!(RT.RTable.RTHight = Bot * 
  RT.RTableCNTR.RTVerticalMotor = GoDown);                            # 11
#
# Limitation of Mobility of the Rotary Arm
#
!(AR.Arm.RAAnglePos = OverRT * 
  AR.ACNTR.RARotaryMotor = CWise);                                    # 12
!(AR.Arm.RAAnglePos = OverLoadedPress * 
  AR.ACNTR.RARotaryMotor = CCWise);                                   # 13
!(AR.Arm.RALoadArm = Retracted * 
  AR.ACNTR.RAExtendLoadArm = Retract);                                # 14
!(AR.Arm.RALoadArm = Extended * 
  AR.ACNTR.RAExtendLoadArm = Extend);                                 # 15
!(AR.Arm.RAUnLoadArm = Retracted * 
  AR.ACNTR.RAExtendUnLoadArm = Retract);                              # 16
!(AR.Arm.RAUnLoadArm = Extended * 
  AR.ACNTR.RAExtendUnLoadArm = Extend);                               # 17
!((!AR.Arm.RALoadArm = Retracted) * 
  (!AR.Arm.RAUnLoadArm = Retracted));                                 # 18
!AR.ACNTR.RARotaryMotor = Stop -> 
 (AR.Arm.RALoadArm = Retracted * AR.Arm.RAUnLoadArm = Retracted);     # 19
#
# Limitation of Mobility for the Press
#
!(PR.Pr.PressPosition = Top * PR.PrCNTR.PressMotor = GoUp);           # 20
!(PR.Pr.PressPosition = Bot * PR.PrCNTR.PressMotor = GoDown);         # 21
(AR.Arm.RAAnglePos = OverLoadedPress * !AR.Arm.RALoadArm = Retracted)
-> PR.Pr.PressPosition = Mid;                                         # 22
!(PR.Pr.PressPosition = Mid * AR.Arm.RALoadArm = Extended * 
  AR.Arm.RAAnglePos = OverLoadedPress);                               # 23
!(PR.Pr.PressPosition = Top * AR.Arm.RAUnLoadArm = Extended * 
  AR.Arm.RAAnglePos = OverUnLoadedPress);                             # 24
