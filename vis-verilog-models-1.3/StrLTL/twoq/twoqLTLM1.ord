# vis release 1.4 (compiled 17-Apr-01 at 8:01 AM)
# network name: twoQ
# generated: Tue Apr 17 12:39:54 2001
#
# name                    type            mddId vals levs
q1.inputmatch            latch                0    2 (0)
q1.inputmatch$NS         shadow               1    2 (1)
q0.inputmatch            latch                2    2 (2)
q0.inputmatch$NS         shadow               3    2 (3)
q1.writetail<0>          latch                4    2 (4)
q1.writetail<0>$NS       shadow               5    2 (5)
q1.writetail<1>          latch                6    2 (6)
q1.writetail<1>$NS       shadow               7    2 (7)
outisread<1>             latch                8    2 (8)
outisread<1>$NS          shadow               9    2 (9)
outaddr1<1>              latch               10    2 (10)
outaddr1<1>$NS           shadow              11    2 (11)
q1.writehead<1>          latch               12    2 (12)
q1.writehead<1>$NS       shadow              13    2 (13)
outaddr1<0>              latch               14    2 (14)
outaddr1<0>$NS           shadow              15    2 (15)
q1.writehead<0>          latch               16    2 (16)
q1.writehead<0>$NS       shadow              17    2 (17)
readin<1>                primary-input       18    2 (18)
validin<1>               primary-input       19    2 (19)
q1.readtail<0>           latch               20    2 (20)
q1.readtail<0>$NS        shadow              21    2 (21)
q1.readtail<1>           latch               22    2 (22)
q1.readtail<1>$NS        shadow              23    2 (23)
q1readhead<1>            latch               24    2 (24)
q1readhead<1>$NS         shadow              25    2 (25)
q1storeaddr<1>           latch               26    2 (26)
q1storeaddr<1>$NS        shadow              27    2 (27)
q1readhead<0>            latch               28    2 (28)
q1readhead<0>$NS         shadow              29    2 (29)
q1storeaddr<0>           latch               30    2 (30)
q1storeaddr<0>$NS        shadow              31    2 (31)
inaddr1<0>               primary-input       32    2 (32)
q1.writefifo<*0*><0>     latch               33    2 (33)
q1.writefifo<*0*><0>$NS  shadow              34    2 (34)
q1.writefifo<*1*><0>     latch               35    2 (35)
q1.writefifo<*1*><0>$NS  shadow              36    2 (36)
q1.writefifo<*2*><0>     latch               37    2 (37)
q1.writefifo<*2*><0>$NS  shadow              38    2 (38)
q1.writefifo<*3*><0>     latch               39    2 (39)
q1.writefifo<*3*><0>$NS  shadow              40    2 (40)
q1.readfifo<*0*><0>      latch               41    2 (41)
q1.readfifo<*0*><0>$NS   shadow              42    2 (42)
q1.readfifo<*1*><0>      latch               43    2 (43)
q1.readfifo<*1*><0>$NS   shadow              44    2 (44)
q1.readfifo<*2*><0>      latch               45    2 (45)
q1.readfifo<*2*><0>$NS   shadow              46    2 (46)
q1.readfifo<*3*><0>      latch               47    2 (47)
q1.readfifo<*3*><0>$NS   shadow              48    2 (48)
inaddr1<1>               primary-input       49    2 (49)
q1.writefifo<*0*><1>     latch               50    2 (50)
q1.writefifo<*0*><1>$NS  shadow              51    2 (51)
q1.writefifo<*1*><1>     latch               52    2 (52)
q1.writefifo<*1*><1>$NS  shadow              53    2 (53)
q1.writefifo<*2*><1>     latch               54    2 (54)
q1.writefifo<*2*><1>$NS  shadow              55    2 (55)
q1.writefifo<*3*><1>     latch               56    2 (56)
q1.writefifo<*3*><1>$NS  shadow              57    2 (57)
q1.readfifo<*0*><1>      latch               58    2 (58)
q1.readfifo<*0*><1>$NS   shadow              59    2 (59)
q1.readfifo<*1*><1>      latch               60    2 (60)
q1.readfifo<*1*><1>$NS   shadow              61    2 (61)
q1.readfifo<*2*><1>      latch               62    2 (62)
q1.readfifo<*2*><1>$NS   shadow              63    2 (63)
q1.readfifo<*3*><1>      latch               64    2 (64)
q1.readfifo<*3*><1>$NS   shadow              65    2 (65)
bus_gnt<1>               latch               66    2 (66)
bus_gnt<1>$NS            shadow              67    2 (67)
q1match                  latch               68    2 (68)
q1match$NS               shadow              69    2 (69)
validout<1>              latch               70    2 (70)
validout<1>$NS           shadow              71    2 (71)
q0.writetail<0>          latch               72    2 (72)
q0.writetail<0>$NS       shadow              73    2 (73)
q0.writetail<1>          latch               74    2 (74)
q0.writetail<1>$NS       shadow              75    2 (75)
select                   primary-input       76    2 (76)
outisread<0>             latch               77    2 (77)
outisread<0>$NS          shadow              78    2 (78)
outaddr0<1>              latch               79    2 (79)
outaddr0<1>$NS           shadow              80    2 (80)
q0.writehead<1>          latch               81    2 (81)
q0.writehead<1>$NS       shadow              82    2 (82)
outaddr0<0>              latch               83    2 (83)
outaddr0<0>$NS           shadow              84    2 (84)
q0.writehead<0>          latch               85    2 (85)
q0.writehead<0>$NS       shadow              86    2 (86)
readin<0>                primary-input       87    2 (87)
validin<0>               primary-input       88    2 (88)
q0.readtail<0>           latch               89    2 (89)
q0.readtail<0>$NS        shadow              90    2 (90)
q0.readtail<1>           latch               91    2 (91)
q0.readtail<1>$NS        shadow              92    2 (92)
q0readhead<1>            latch               93    2 (93)
q0readhead<1>$NS         shadow              94    2 (94)
q0storeaddr<1>           latch               95    2 (95)
q0storeaddr<1>$NS        shadow              96    2 (96)
q0readhead<0>            latch               97    2 (97)
q0readhead<0>$NS         shadow              98    2 (98)
q0storeaddr<0>           latch               99    2 (99)
q0storeaddr<0>$NS        shadow             100    2 (100)
inaddr0<0>               primary-input      101    2 (101)
q0.writefifo<*0*><0>     latch              102    2 (102)
q0.writefifo<*0*><0>$NS  shadow             103    2 (103)
q0.writefifo<*1*><0>     latch              104    2 (104)
q0.writefifo<*1*><0>$NS  shadow             105    2 (105)
q0.writefifo<*2*><0>     latch              106    2 (106)
q0.writefifo<*2*><0>$NS  shadow             107    2 (107)
q0.writefifo<*3*><0>     latch              108    2 (108)
q0.writefifo<*3*><0>$NS  shadow             109    2 (109)
q0.readfifo<*0*><0>      latch              110    2 (110)
q0.readfifo<*0*><0>$NS   shadow             111    2 (111)
q0.readfifo<*1*><0>      latch              112    2 (112)
q0.readfifo<*1*><0>$NS   shadow             113    2 (113)
q0.readfifo<*2*><0>      latch              114    2 (114)
q0.readfifo<*2*><0>$NS   shadow             115    2 (115)
q0.readfifo<*3*><0>      latch              116    2 (116)
q0.readfifo<*3*><0>$NS   shadow             117    2 (117)
inaddr0<1>               primary-input      118    2 (118)
q0.writefifo<*0*><1>     latch              119    2 (119)
q0.writefifo<*0*><1>$NS  shadow             120    2 (120)
q0.writefifo<*1*><1>     latch              121    2 (121)
q0.writefifo<*1*><1>$NS  shadow             122    2 (122)
q0.writefifo<*2*><1>     latch              123    2 (123)
q0.writefifo<*2*><1>$NS  shadow             124    2 (124)
q0.writefifo<*3*><1>     latch              125    2 (125)
q0.writefifo<*3*><1>$NS  shadow             126    2 (126)
q0.readfifo<*0*><1>      latch              127    2 (127)
q0.readfifo<*0*><1>$NS   shadow             128    2 (128)
q0.readfifo<*1*><1>      latch              129    2 (129)
q0.readfifo<*1*><1>$NS   shadow             130    2 (130)
q0.readfifo<*2*><1>      latch              131    2 (131)
q0.readfifo<*2*><1>$NS   shadow             132    2 (132)
q0.readfifo<*3*><1>      latch              133    2 (133)
q0.readfifo<*3*><1>$NS   shadow             134    2 (134)
bus_gnt<0>               latch              135    2 (135)
bus_gnt<0>$NS            shadow             136    2 (136)
Buechi.ND_n3_n4          pseudo-input       137    5 (137, 138, 139)
q0match                  latch              138    2 (140)
q0match$NS               shadow             139    2 (141)
Buechi.state             latch              140    5 (142, 143, 144)
Buechi.state$NS          shadow             141    5 (145, 146, 147)
Buechi.ND_n1_n2          pseudo-input       142    5 (148, 149, 150)
validout<0>              latch              143    2 (151)
validout<0>$NS           shadow             144    2 (152)
