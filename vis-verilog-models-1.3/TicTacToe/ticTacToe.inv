#PASS: Only values from 0 to 8 are in register move.
move[3]=0 + move[2:0]=0;
#PASS: X and O cannot both win.
!(winX=1 * winO=1);
#
# Some more interesting properties.
#
#PASS: Three in a row cause the game to stop and a win for either player.
(b<*0*>=X * b<*1*>=X * b<*2*>=X) -> winX=1; # top row
(b<*0*>=O * b<*1*>=O * b<*2*>=O) -> winO=1;
(b<*3*>=X * b<*4*>=X * b<*5*>=X) -> winX=1; # middle row
(b<*3*>=O * b<*4*>=O * b<*5*>=O) -> winO=1;
(b<*6*>=X * b<*7*>=X * b<*8*>=X) -> winX=1; # bottom row
(b<*6*>=O * b<*7*>=O * b<*8*>=O) -> winO=1;
(b<*0*>=X * b<*3*>=X * b<*6*>=X) -> winX=1; # left column
(b<*0*>=O * b<*3*>=O * b<*6*>=O) -> winO=1;
(b<*1*>=X * b<*4*>=X * b<*7*>=X) -> winX=1; # middle column
(b<*1*>=O * b<*4*>=O * b<*7*>=O) -> winO=1;
(b<*2*>=X * b<*5*>=X * b<*8*>=X) -> winX=1; # right column
(b<*2*>=O * b<*5*>=O * b<*8*>=O) -> winO=1;
(b<*0*>=X * b<*4*>=X * b<*8*>=X) -> winX=1; # diagonal
(b<*0*>=O * b<*4*>=O * b<*8*>=O) -> winO=1;
(b<*2*>=X * b<*4*>=X * b<*6*>=X) -> winX=1; # antidiagonal
(b<*2*>=O * b<*4*>=O * b<*6*>=O) -> winO=1;
#FAIL: X cannot win.
winX=0;
#FAIL: O cannot win.
winO=0;
