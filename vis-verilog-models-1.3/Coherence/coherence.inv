# The directory contains information about the cache content
# that is coherent with the information in the cache controller
# If the block is in state EXCLUSIVE in the cache controller, its corresponding
# bit is set in the Wlist of the directory

((cc1.block_state = EXCLUSIVE)*(cc1.block_add<0> = 0)) ->  (direc.cache_Wlist1<*0*> = 1);

# Two caches do not have exclusive access to the same block

((cc1.block_state=EXCLUSIVE) * (cc2.block_state=EXCLUSIVE)) ->
         (((cc1.block_add<0> = 0) *(cc2.block_add<0>=1)+
          ((cc1.block_add<0> = 1)*(cc2.block_add<0>=0))));

# If a cache has exclusive access to a block, then the other cache
# has no access to that block 
# Property for block 0 owned by cache 1

((cc1.block_state=EXCLUSIVE) * (cc1.block_add<0> = 0)) ->
    ((cc2.block_state=INVALID) + ! (cc2.block_add<0> = 0));

# If a cache has exclusive access to a block, then the other cache
# has no access to that block 
# Property for block 0 owned by cache 1

((cc1.block_state=EXCLUSIVE) * (cc1.block_add<0> = 1)) ->
    ((cc2.block_state=INVALID) + ! (cc2.block_add<0> = 1));

# The directory contains information about the cache content
# that is coherent with the information in the cache controller
# If the block is in state EXCLUSIVE in the cache controller, its corresponding
# bit is set in the Wlist of the directory
# FAILS
((cc1.cache_req = blk_rreq)*(direc.arbiter_state = ONE)*(cc1.blk_add<0>=0)*(direc.cache_Wlist2<*0*> = 1)) -> (cc2.block_state = EXCLUSIVE);
