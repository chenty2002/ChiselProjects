#PASS: Mutual exclusion.
G !(
 (P0.state=locking + P1.state=locking + P2.state=locking + P3.state=locking) *
 (P4.state=locking + P5.state=locking + P6.state=locking + P7.state=locking) +
 (P0.state=locking + P1.state=locking + P4.state=locking + P5.state=locking) *
 (P2.state=locking + P3.state=locking + P6.state=locking + P7.state=locking) +
 (P0.state=locking + P2.state=locking + P4.state=locking + P6.state=locking) *
 (P1.state=locking + P3.state=locking + P5.state=locking + P7.state=locking));

#PASS: Absence of starvation.  Needs fairness constraints.
G (P0.state=requesting -> F P0.state=locking);
G (P1.state=requesting -> F P1.state=locking);
G (P2.state=requesting -> F P2.state=locking);
G (P3.state=requesting -> F P3.state=locking);
G (P4.state=requesting -> F P4.state=locking);
G (P5.state=requesting -> F P5.state=locking);
G (P6.state=requesting -> F P6.state=locking);
G (P7.state=requesting -> F P7.state=locking);
