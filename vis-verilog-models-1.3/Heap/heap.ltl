\define FULL		nitems[2:0]=4
\define EMPTY		nitems[2:0]=0
\define LEGAL		(nitems[2]=0 + nitems[1:0]=0)

#PASS: The heap property is never violated.
G error=0;

#PASS: the number of items is always between 0 and 4.
G \LEGAL;

#PASS: No PUSH commands are accpted if the heap is full.
G((ready=1 * \FULL) -> (state=POP1 R !state=PUSH1));
#PASS: No POP commands are accpted if the heap is fempty.
G((ready=1 * \EMPTY) -> (state=PUSH1 R !state=POP1));

#PASS: No PUSH commands are accpted if the heap is full.
G((ready=1 * \FULL) -> X !state=PUSH1);
#PASS: No POP commands are accpted if the heap is empty.
G((ready=1 * \EMPTY) -> X !state=POP1);

#PASS: Yet another variation on the theme.
G((ready=1 * \FULL) -> X(state=POP1 + \FULL));
G((ready=1 * \EMPTY) -> X(state=PUSH1 + \EMPTY));

#PASS: Sanity checks on the allowed transitions.
G(state={IDLE,PUSH2} + X !state=PUSH1);
G(state=PUSH1 + X !state=PUSH2);
G(state={IDLE,POP3} + X !state=POP1);
G(state=POP1 + X !state=POP2);
G(state=POP2 + X !state=POP3);
G(state={IDLE,TEST2} + X !state=TEST1);
G(state=TEST1 + X !state=TEST2);
